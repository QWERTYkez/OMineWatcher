<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OMineWatcher"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="OMineWatcher.MainWindow"
        mc:Ignorable="d"
        Title="OMineWatcher" Height="500" Width="900" Background="{DynamicResource Custom.Window.Background}" MinWidth="857">
    <Window.Resources>
        <!--#region Other-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region CustomBrushes-->
        <!--#region Window-->
        <RadialGradientBrush x:Key="Custom.Window.Background" RadiusX="0.75" RadiusY="0.75">
            <GradientStop Color="#FF2F5566" Offset="0"/>
            <GradientStop Color="#FF07212C" Offset="0.768"/>
            <GradientStop Color="#FF032330" Offset="1"/>
            <GradientStop Color="#FF1C4252" Offset="0.211"/>
        </RadialGradientBrush>
        <!--#endregion-->

        <!--#region Listbox-->
        <SolidColorBrush x:Key="Custom.ListBox.Foreground" Color="#FFDBFF00"/>
        <SolidColorBrush x:Key="Custom.ListBox.BorderBrush" Color="#FFDBFF00"/>
        <SolidColorBrush x:Key="Custom.ListBox.Background" Color="#4C495500"/>

        <LinearGradientBrush x:Key="Custom.ListBoxItem.MouseOver.Background" StartPoint="0.5,0" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox">
            <GradientStop Color="Transparent" Offset="0"/>
            <GradientStop Color="#33DBFF00" Offset="0.5"/>
            <GradientStop Color="Transparent" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Custom.ListBoxItem.Selected.Background" Color="#4CA8B847"/>
        <!--#endregion-->
        <!--#region TextBox-->
        <SolidColorBrush x:Key="Custom.TextBox.Foreground" Color="#FF77A8FF"/>
        <SolidColorBrush x:Key="Custom.TextBox.Background" Color="#66001F54"/>
        <!--#endregion-->
        <!--#region Button-->
        <LinearGradientBrush x:Key="Custom.Button.Base.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#B2611589" Offset="0"/>
            <GradientStop Color="#B22B0729" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Custom.Button.Base.Foreground" Color="#FFEB91FF"/>
        <LinearGradientBrush x:Key="Custom.Button.MouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFAD45E4" Offset="0"/>
            <GradientStop Color="#FF7C0075" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Custom.Button.MouseOver.Foreground" Color="White"/>
        <LinearGradientBrush x:Key="Custom.Button.Click.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF681E8F" Offset="0"/>
            <GradientStop Color="#FF3C0039" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Custom.Button.Click.Foreground" Color="White"/>
        <LinearGradientBrush x:Key="Custom.Button.Disabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#9933004D" Offset="0"/>
            <GradientStop Color="#99270024" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Custom.Button.Disabled.Foreground" Color="#99A100C5"/>
        <!--#endregion-->
        <!--#region ComboBox-->
        <SolidColorBrush x:Key="Custom.ComboBox.Static.Background" Color="#660F0051"/>
        <SolidColorBrush x:Key="Custom.ComboBox.Static.Foreground" Color="#FFA28DFF"/>
        <SolidColorBrush x:Key="Custom.ComboBox.MouseOver.Background" Color="#665B46B6"/>
        <SolidColorBrush x:Key="Custom.ComboBox.MouseOver.Foreground" Color="#FFE2DCFF"/>
        <SolidColorBrush x:Key="Custom.ComboBox.Disabled.Background" Color="#664D4D4D"/>
        <SolidColorBrush x:Key="Custom.ComboBox.Disabled.Foreground" Color="#FF818181"/>
        <SolidColorBrush x:Key="Custom.ComboBox.Popup.Background" Color="#FF19123A"/>

        <SolidColorBrush x:Key="Custom.ComboBoxItem.Selected.Background" Color="#FF32266A"/>
        <LinearGradientBrush x:Key="Custom.ComboBoxItem.MouseOver.Background" StartPoint="0.5,0" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox">
            <GradientStop Color="#FF19123A" Offset="0"/>
            <GradientStop Color="#FF3D3174" Offset="0.5"/>
            <GradientStop Color="#FF19123A" Offset="1"/>
        </LinearGradientBrush>

        <!--#endregion-->
        <!--#region TabControl / TabItem-->
        
        <SolidColorBrush x:Key="TabControl.Background" Color="#19A7A7B2"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FF2E9B9E"/>
        <SolidColorBrush x:Key="TabItem.Selected.Foreground" Color="#FF0D0E0E"/>

        <SolidColorBrush x:Key="TabItem.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#FF2E9B9E"/>
        <SolidColorBrush x:Key="TabItem.Static.Foreground" Color="#FF7CBABB"/>

        <SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="Cyan"/>
        <SolidColorBrush x:Key="TabItem.MouseOver.Foreground" Color="Cyan"/>

        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#FF323232"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#FF636363"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Foreground" Color="#FF636363"/>

        <!--#endregion-->
        <!--#endregion-->

        <!--#region Стили и Шаблоны-->
        <!--#region Listbox-->
        <ControlTemplate x:Key="ContrastListBox" TargetType="{x:Type ListBox}">
            <Grid>
                <Border x:Name="Bx" BorderBrush="{StaticResource Custom.ListBox.BorderBrush}" BorderThickness="2" Background="Transparent" Padding="1" SnapsToDevicePixels="True">
                    <Border.Effect>
                        <BlurEffect Radius="10"/>
                    </Border.Effect>
                </Border>
                <Border x:Name="Bd" BorderBrush="{StaticResource Custom.ListBox.BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="True">
                    <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource Custom.ListBox.Foreground}"/>
                    <Setter Property="Background" Value="{StaticResource Custom.ListBox.Background}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="True"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="ListBox">
            <Setter Property="Template" Value="{DynamicResource ContrastListBox}"/>
        </Style>


        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Custom.ListBoxItem.MouseOver.Background}"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Custom.ListBoxItem.Selected.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Custom.ListBox.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->
        <!--#region TextBox-->
        <ControlTemplate x:Key="ContrastTextBox" TargetType="{x:Type TextBox}">
            <Grid>
                <Border x:Name="Bx" BorderBrush="{StaticResource Custom.TextBox.Foreground}" BorderThickness="2" Background="{StaticResource Custom.TextBox.Background}" SnapsToDevicePixels="True">
                    <Border.Effect>
                        <BlurEffect Radius="2"/>
                    </Border.Effect>
                </Border>
                <Border x:Name="border" BorderBrush="{StaticResource Custom.TextBox.Foreground}" BorderThickness="1" SnapsToDevicePixels="True">
                    <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="TextBoxBase.Foreground" Value="{StaticResource Custom.TextBox.Foreground}"/>
                    <Setter Property="TextBoxBase.CaretBrush" Value="White"/>
                    <Setter Property="TextBoxBase.SelectionBrush" Value="White"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Template" Value="{StaticResource ContrastTextBox}"/>
        </Style>
        <!--#endregion-->
        <!--#region ComboBox-->

        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border x:Name="Bx" BorderBrush="{StaticResource Custom.ComboBox.Static.Foreground}" BorderThickness="2" Background="{StaticResource Custom.ComboBox.Static.Background}" SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <BlurEffect Radius="2"/>
                                </Border.Effect>
                            </Border>
                            <Border x:Name="templateRoot" SnapsToDevicePixels="true" BorderThickness="1" BorderBrush="{StaticResource Custom.ComboBox.Static.Foreground}">
                                <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                    <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource Custom.ComboBox.Static.Foreground}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource Custom.ComboBox.MouseOver.Foreground}"/>
                                <Setter Property="Background" TargetName="Bx" Value="{DynamicResource Custom.ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bx" Value="{DynamicResource Custom.ComboBox.MouseOver.Foreground}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource Custom.ComboBox.MouseOver.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource Custom.ComboBox.Disabled.Foreground}"/>
                                <Setter Property="Background" TargetName="Bx" Value="{DynamicResource Custom.ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bx" Value="{DynamicResource Custom.ComboBox.Disabled.Foreground}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource Custom.ComboBox.Disabled.Foreground}"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="3"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <!--{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}-->
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{StaticResource Custom.ComboBox.Static.Foreground}" BorderThickness="1" Background="{StaticResource Custom.ComboBox.Popup.Background}">
                            <!--DynamicResource {x:Static SystemColors.WindowBrushKey}-->
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Custom.ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Custom.ComboBox.Static.Foreground}"/>
            <Setter Property="Foreground" Value="{StaticResource Custom.ComboBox.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="{DynamicResource Custom.ComboBox.MouseOver.Foreground}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource Custom.ComboBox.Disabled.Foreground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--#region ComboBoxItem-->
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA"/>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                    <Condition Property="IsSelected" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Custom.ComboBoxItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Custom.ComboBoxItem.Selected.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Custom.ComboBox.Static.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#endregion-->
        <!--#region GroupBox-->
        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
        <SolidColorBrush x:Key="Custom.GroupBox.Foreground" Color="#FFFF7F00"/>
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource Custom.GroupBox.Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="6"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="6"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
                            <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
                                <Border.OpacityMask>
                                    <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                        <Binding ElementName="Header" Path="ActualWidth"/>
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Border.OpacityMask>
                                <Border BorderBrush="{StaticResource Custom.GroupBox.Foreground}" BorderThickness="2" CornerRadius="3">
                                    <Border.Effect>
                                        <BlurEffect Radius="3"/>
                                    </Border.Effect>
                                </Border>
                            </Border>
                            <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region Button-->
        <ControlTemplate x:Key="ContrastButtonKey" TargetType="{x:Type ButtonBase}">
            <!--#region Макет-->
            <Grid>
                <Border x:Name="border" BorderBrush="LightBlue" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <Border x:Name="a" Margin="-1" BorderThickness="2">
                    <Border.Effect>
                        <BlurEffect Radius="5"/>
                    </Border.Effect>
                </Border>
                <Border x:Name="b" Margin="0" BorderThickness="1"/>
            </Grid>
            <!--#endregion Макет-->
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter TargetName="a" Property="BorderBrush" Value="{StaticResource Custom.Button.Base.Foreground}"/>
                    <Setter TargetName="b" Property="BorderBrush" Value="{StaticResource Custom.Button.Base.Foreground}"/>
                    <Setter Property="Foreground" Value="{StaticResource Custom.Button.Base.Foreground}"/>
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Custom.Button.Base.Background}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="a" Property="BorderBrush" Value="{StaticResource Custom.Button.MouseOver.Foreground}"/>
                    <Setter TargetName="b" Property="BorderBrush" Value="{StaticResource Custom.Button.MouseOver.Foreground}"/>
                    <Setter Property="Foreground" Value="{StaticResource Custom.Button.MouseOver.Foreground}"/>
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Custom.Button.MouseOver.Background}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="a" Property="BorderBrush" Value="{StaticResource Custom.Button.Click.Foreground}"/>
                    <Setter TargetName="b" Property="BorderBrush" Value="{StaticResource Custom.Button.Click.Foreground}"/>
                    <Setter Property="Foreground" Value="{StaticResource Custom.Button.Click.Foreground}"/>
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Custom.Button.Click.Background}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="a" Property="BorderBrush" Value="{StaticResource Custom.Button.Disabled.Foreground}"/>
                    <Setter TargetName="b" Property="BorderBrush" Value="{StaticResource Custom.Button.Disabled.Foreground}"/>
                    <Setter Property="Foreground" Value="{StaticResource Custom.Button.Disabled.Foreground}"/>
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Custom.Button.Disabled.Background}"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <BlurEffect Radius="1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!--<Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="Black"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="LightBlue"/>
                    <Setter Property="Foreground" Value="LightBlue"/>
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="Button">
            <Setter Property="Template" Value="{StaticResource ContrastButtonKey}"/>
        </Style>
        <!--#endregion-->
        <!--#region TabControl-->
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabControl.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="Yellow"/>
            <!--{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region TabItem-->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{StaticResource TabItem.Static.Foreground}"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Background}" BorderThickness="1,1,1,0" Background="{StaticResource TabControl.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.MouseOver.Foreground}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.MouseOver.Foreground}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.MouseOver.Foreground}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.MouseOver.Foreground}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.Disabled.Foreground}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.Disabled.Foreground}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.Disabled.Foreground}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.Disabled.Foreground}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Selected.Background}"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.Selected.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region TextBlock-->
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="2" Color="White" Opacity="1" BlurRadius="5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region CheckBox-->
        <Style TargetType="CheckBox">
            <Setter Property="Background" Value="#FF70FFF2"/>
            <Setter Property="BorderBrush" Value="Blue"/>
        </Style>
        <!--#endregion -->





        <!--#endregion-->
    </Window.Resources>


    <TabControl>
        <TabItem Header="Базовый вид">
            <Grid x:Name="BaseGrid"/>
        </TabItem>

        <TabItem Header="Детальный вид">
            <Grid x:Name="DetalGrid">

                <ComboBox SelectedIndex="0" Width="100" Height="25">
                    <ComboBoxItem>dfgsdfg</ComboBoxItem>
                    <ComboBoxItem>dfgsdfg</ComboBoxItem>
                    <ComboBoxItem 
                        BorderBrush="#FFC8C1E6" 
                        Background="#FF32266A"
                        >dfgsdfg</ComboBoxItem>
                    <ComboBoxItem>dfgsdfg</ComboBoxItem>
                    <ComboBoxItem>dfgsdfg</ComboBoxItem>
                    <ComboBoxItem>dfgsdfg</ComboBoxItem>
                </ComboBox>

            </Grid>

        </TabItem>

        <TabItem Header="Управление ригами">
            <Grid>



                <Grid x:Name="RigsSet">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <!--Список ригов-->
                    <GroupBox Grid.Column="0" Header="Список ригов" Margin="4,0,4,4">
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="240"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="Имя:"/></TextBlock>
                            <TextBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="3">sdfsgdfgssdfg</TextBox>
                            <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="IP:"/></TextBlock>
                            <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="3">sdfsgdfgssdfg</TextBox>

                            <TextBlock Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="Тип рига:"/></TextBlock>
                            <ComboBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="3"/>
                            <Grid Grid.Row="3" Grid.ColumnSpan="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Content="-" Margin="3"/>
                                <Button Grid.Column="1" Content="+" Margin="3"/>
                                <Button Grid.Column="2" Content="Вверх" Margin="3"/>
                                <Button Grid.Column="3" Content="Вниз" Margin="3"/>
                                <Button Grid.Column="4" Content="Сохранить" Margin="3"/>
                            </Grid>
                            <ScrollViewer Grid.Row="4" Grid.ColumnSpan="2" VerticalScrollBarVisibility="Auto">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="56"/>
                                    </Grid.ColumnDefinitions>
                                    <ListBox Grid.Column="0" Margin="3">
                                        <ListBoxItem>sdfgsdfgsdf</ListBoxItem>
                                        <ListBoxItem>sdfgsdfgsdf</ListBoxItem>
                                        <ListBoxItem>sdfgsdfgsdf</ListBoxItem>
                                        <ListBoxItem>sdfgsdfgsdf</ListBoxItem>
                                    </ListBox>
                                    <StackPanel Grid.Column="1" Margin="0,5,0,3">
                                        <Button x:Name="PrototypeWatchingButton" Height="20" Background="Crimson" BorderBrush="Black" IsEnabled="False" Visibility="Collapsed" Content="Вкл/Выкл"/>
                                    </StackPanel>
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                    </GroupBox>
                    <!--Список ригов///-->
                    <!--Настройки ригов-->
                    <TabControl Grid.Column="1" Margin="4,0,4,4">
                        <TabItem Header="Настройки">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <StackPanel>
                                    <Grid Grid.Row="0" Margin="0,5" HorizontalAlignment="Stretch" Grid.ColumnSpan="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" FontWeight="Bold" Margin="5,0"><Run Text="Имя рига:"/></TextBlock>
                                        <TextBox Grid.Column="1" FontWeight="Bold" TextAlignment="Center"/>
                                        <TextBlock Grid.Column="2" Text="Автозапуск:" Margin="5,0" VerticalAlignment="Center"/>
                                        <CheckBox Grid.Column="3" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                    </Grid>
                                    <WrapPanel Margin="5">
                                        <TextBlock VerticalAlignment="Center" TextAlignment="Center">Количество GPU:</TextBlock>
                                        <ComboBox x:Name="GPUsCB" Width="60" Height="25" Margin="5,0,0,0" SelectionChanged="GPUsCB_SelectionChanged"></ComboBox>
                                        <TextBlock x:Name="GPUsSwitchHeader" Foreground="White" Margin="10,0,5,0" VerticalAlignment="Center" TextAlignment="Center" Visibility="Collapsed">Вкл/Выкл:</TextBlock>
                                        <Border x:Name="GPUswitchB" BorderBrush="White" BorderThickness="2" Visibility="Collapsed">
                                            <WrapPanel Margin="3" x:Name="GPUswitchSP"/>
                                        </Border>
                                    </WrapPanel>
                                    <Grid HorizontalAlignment="Right">

                                    </Grid>
                                </StackPanel>
                                <Grid Grid.Row="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <GroupBox Header="Список конфигураций" Margin="4,0,4,4">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <ListBox Grid.Row="1" Margin="2" Width="200"/>
                                            <Grid Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="0" Margin="3" Content="-"/>
                                                <Button Grid.Column="1" Margin="3" Content="+"/>
                                                <Button Grid.Column="2" Margin="3" Content="save"/>
                                                <Button Grid.Column="3" Margin="3" Content="start"/>
                                            </Grid>
                                        </Grid>
                                    </GroupBox>
                                    <Grid Grid.Column="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"><Run Text="Название:"/></TextBlock>
                                        <TextBox Grid.Row="0" Grid.Column="1" Margin="2"/>
                                        <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"><Run Text="Разгон:"/></TextBlock>
                                        <ComboBox Grid.Row="1" Grid.Column="1" Margin="2" SelectedIndex="0">
                                            <ComboBoxItem>sgdfgsdfg</ComboBoxItem>
                                        </ComboBox>
                                        <TextBlock Grid.Row="2" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"><Run Text="Алгоритм:"/></TextBlock>
                                        <ComboBox Grid.Row="2" Grid.Column="1" Margin="2" IsEnabled="False"/>
                                        <TextBlock Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"><Run Text="Майнер:"/></TextBlock>
                                        <ComboBox Grid.Row="3" Grid.Column="1" Margin="2"/>
                                        <TextBlock Grid.Row="4" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"><Run Text="Мин. хеш:"/></TextBlock>
                                        <TextBox Grid.Row="4" Grid.Column="1" Margin="2"/>
                                        <TextBlock Grid.Row="5" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"><Run Text="Пул:"/></TextBlock>
                                        <TextBox Grid.Row="5" Grid.Column="1" Margin="2"/>
                                        <TextBlock Grid.Row="6" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"><Run Text="Порт:"/></TextBlock>
                                        <TextBox Grid.Row="6" Grid.Column="1" Margin="2"/>
                                        <TextBlock Grid.Row="7" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"><Run Text="Кошелек:"/></TextBlock>
                                        <TextBox Grid.Row="7" Grid.Column="1" Margin="2"/>
                                        <TextBlock Grid.Row="8" Grid.ColumnSpan="2" HorizontalAlignment="Center"><Run Text="Дополнительные парамаетры:"/></TextBlock>
                                        <TextBox Grid.Row="9" Grid.ColumnSpan="2" Margin="2">ghdfghdghdghdfghdghdghdghdghdghdghdgh</TextBox>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Разгон (MSI Afterburner)">

                        </TabItem>
                        <TabItem Header="| - Лог - |">

                        </TabItem>
                        <TabItem Header="Общие настройки">

                        </TabItem>
                    </TabControl>
                    <Button Grid.Column="1" Height="19" HorizontalAlignment="Right" VerticalAlignment="Top">Подключиться</Button>
                    <!--Настройки ригов///-->
                </Grid>
            </Grid>
        </TabItem>

        <TabItem Header="Настройки пулов">
            <Grid x:Name="PoolSet">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ListBox Grid.Row="0" Margin="5" Width="200"/>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Margin="5,0,5,5" Content="-"/>
                        <Button Grid.Column="1" Margin="5,0,5,5" Content="Вверх"/>
                        <Button Grid.Column="2" Margin="5,0,5,5" Content="Вниз"/>
                        <Button Grid.Column="3" Margin="5,0,5,5" Content="+"/>
                    </Grid>
                </Grid>
            </Grid>
        </TabItem>

        <TabItem Header="Общие настройки">
            <Grid x:Name="BaseSet"/>
        </TabItem>
    </TabControl>
</Window>
